name: Optimize resource pack
on:
  issues:
    types:
      - labeled

jobs:
  get-pack-info:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'conversion'
    permissions:
      issues: read
    timeout-minutes: 2
    outputs:
      pack_url: ${{ steps.organize-inputs.outputs.PACK_URL }}
      default_assets_version: ${{ steps.organize-inputs.outputs.DEFAULT_ASSETS_VERSION }}
    steps:
      - name: Issue Forms Body Parser
        id: parse-issue
        uses: zentered/issue-forms-body-parser@v2.1.1
      - name: Organize Inputs
        id: organize-inputs
        run: |
          echo ${{ toJSON(steps.parse-issue.outputs.data) }} | jq '
          def test_input($input; $default):
          if ($input == "*No response*" or $input == "None") then $default else ($input | tostring | gsub("\\\\";""))  end;
          {
            "pack_url": .["java-pack-direct-download-url"].text[1:-1],
            "default_assets_version": test_input(.["default-assets-version"].text; "1.19.3")
          }' > inputs.json
          echo "PACK_URL=$(jq -r '.pack_url' inputs.json)" >> $GITHUB_OUTPUT
          echo "DEFAULT_ASSETS_VERSION=$(jq -r '.default_assets_version' inputs.json)" >> $GITHUB_OUTPUT
  optimize-pack:
    runs-on: ubuntu-latest
    needs: get-pack-info
    permissions:
      contents: read
    timeout-minutes: 90
    outputs:
      run_id: ${{ steps.get-pack-info.outputs.pack_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Enable default asset cache
        id: cache-default-assets
        uses: actions/cache@v4.0.2
        with:
          path: /home/runner/work/PackSquashAction/PackSquashAction/staging/default_assets.zip
          key: ${{ runner.os }}-${{ needs.get-pack-info.outputs.default_assets_version }}
      - name: Optimize
        id: Optimize
        continue-on-error: false
        env:
          PACK_URL: ${{ needs.get-pack-info.outputs.pack_url }}
          DEFAULT_ASSETS_VERSION: ${{ needs.get-pack-info.outputs.default_assets_version }}
        run: |
          mkdir -p staging
          cd staging
          COLUMNS=$COLUMNS-1 curl --no-styled-output -#L -o input_pack.zip "${PACK_URL}" 
          unzip input_pack.zip -d /home/runner/work/PackSquashAction/PackSquashAction/staging/pack
      - name: Run PackSquash
        uses: ComunidadAylas/PackSquash-action@v4
        with:
          packsquash_version: latest
          options: |
            pack_directory = '/home/runner/work/PackSquashAction/PackSquashAction/staging/pack'
            output_file_path = '/home/runner/work/PackSquashAction/PackSquashAction/pack.zip'
            
            recompress_compressed_files = true
            zip_compression_iterations = 20
            automatic_minecraft_quirks_detection = true
            work_around_minecraft_quirks = ['grayscale_images_gamma_miscorrection', 'restrictive_banner_layer_texture_format_check', 'bad_entity_eye_layer_texture_transparency_blending', 'java8_zip_parsing', 'ogg_obfuscation_incompatibility']
            allow_mods = ['OptiFine', 'Minecraft Transit Railway 3']
            skip_pack_icon = false
            validate_pack_metadata_file = true
            ignore_system_and_hidden_files = false
            zip_spec_conformance_level = 'disregard'
            size_increasing_zip_obfuscation = true
            percentage_of_zip_structures_tuned_for_obfuscation_discretion = 100
            never_store_squash_times = true
            threads = 8
            spooling_buffers_size = 128 
            
            ['**/*?.ogg']
            channels = 2
            sampling_frequency = 44100
            target_pitch = 1.5
            target_bitrate_control_metric = 96000


            # Lossless music files get pitch shifted and compressed with good quality
            ['**/*?.{flac,wav}']
            channels = 2
            sampling_frequency = 44100
            target_pitch = 1.5
            target_bitrate_control_metric = 96000

            ['**/*.jsonc']
            minify_json = false
            delete_bloat_keys = false


            ['**/*.png']
            image_data_compression_iterations = 15
            color_quantization_target = 'none'
            maximum_width_and_height = 65535
            skip_alpha_optimizations = true
            color_quantization_dithering_level = 1

            ['**/*.{fsh,vsh}']
            shader_source_transformation_strategy = 'minify'
            is_top_level_shader = false

            ['**/*.properties']
            minify_properties = false

  post-result:
    runs-on: ubuntu-latest
    needs: optimize-pack
    timeout-minutes: 2
    permissions:
      issues: write
    steps:
      - name: Post Result
        id: post-result
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ## :sparkles: The run has finished! :sparkles:
            - Download the pack files from the [action run][1] page. :arrow_double_down:
            If you notice issues with the converted files, please refer to the action log for errors and open a bug report if you believe there is an issue with the converter. This issue will be closed automatically.

            [1]: https://github.com/GaLaXyILY/PackSquash-action/actions/runs/${{ github.run_id}}
          reactions: 'rocket'
      - name: Close Issue
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ github.event.issue.number }}
  conversion-failed:
    runs-on: ubuntu-latest
    needs: [get-pack-info, optimize-pack, post-result]
    if: always() && (needs.get-pack-info.result == 'failure' || needs.optimize-pack.result == 'failure' || needs.optimize-pack.result == 'post-result')
    timeout-minutes: 2
    permissions:
      issues: write
    steps:
      - name: Post Result
        id: post-result
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ## :stop_sign: The run has failed :stop_sign:
            - Check the [action run][1] page for errors. :clipboard:
            - Status by job:
              - Get Pack Info: *${{ needs.get-pack-info.result }}*
              - Optimize Pack: *${{ needs.optimize-pack.result }}*
              - Post Result: *${{ needs.post-result.result }}*

            If you believe this is an issue with the converter. please open a bug report. This issue will be closed automatically.

            [1]: https://github.com/GaLaXyILY/PackSquash-action/actions/runs/${{ github.run_id}}
          reactions: 'x'
      - name: Close Issue
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ github.event.issue.number }}
